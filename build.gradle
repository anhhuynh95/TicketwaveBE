plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'jacoco'
    id 'org.flywaydb.flyway' version '9.20.0'
}

group = 'nl.fontys.s3'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(Test).configureEach {
    maxParallelForks = 1
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

flyway {
    url = 'jdbc:mysql://localhost:3307/docker_ticketwave_db'
    user = 'root'
    password = 'Misstifw@k8' // Replace with your database password
    schemas = ['docker_ticketwave_db']
}

dependencies {
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.flywaydb:flyway-core:10.4.0'
    implementation 'org.flywaydb:flyway-mysql:10.4.0'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation('com.cloudinary:cloudinary-http44:1.26.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2'
//    testImplementation 'org.springframework.cloud:spring-cloud-starter'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

// Spring Cloud BOM for version management
//dependencyManagement {
//    imports {
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
//    }
//}

jacoco {
    toolVersion = "0.8.7"
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'  // Ensure JaCoCo runs after tests
}

jacocoTestReport {
    reports {
        xml.required = true  // Required for SonarQube
        html.required = true  // Enabled for local debugging
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "Ticketwave_S3"
        property "sonar.projectName", "Ticketwave_S3"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}
